{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/ComponentToPrint.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","loading","onFormSubmit","event","preventDefault","props","onSubmit","className","this","value","onChange","e","setState","target","type","placeholder","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","selectImage","isSelected","createRef","addEventListener","image","alt_description","urls","onClick","style","gridRowEnd","cursor","ref","alt","src","regular","ImageList","length","map","key","id","undefined","parentState","imgData","printImages","dataObj","filter","ele","push","setImage","ComponentToPrint","App","images","onSearchSubmit","_state","a","unsplash","get","params","query","responce","data","results","marginTop","trigger","content","componentRef","display","bodyClass","el","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f7415592.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  // instance of client with a couple of default propertis.\n  baseURL: 'https://api.unsplash.com',\n  headers: {\n    Authorization: 'Client-ID 62dc16e377d42105833aedadba103e7f69dcd7c15179be377ecfb200de4a1e6c'\n  } \n})","import React from \"react\";\n\nclass SearchBar extends React.Component {\n  state = { term: \"\", loading: false };\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this);\n  };\n\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\n          <div className=\"field\">\n            <label>Image search</label>\n            <div className=\"fields\">\n              <div className=\"fourteen wide field\">\n                <div className=\"ui icon input loading\">\n                  <input\n                    value={this.state.term}\n                    onChange={(e) => this.setState({ term: e.target.value })}\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                  />\n                  {this.state.loading && <i className=\"search icon\"></i>}\n                </div>\n              </div>\n              <div className=\"two wide field\">\n                <button type=\"submit\" className=\"ui primary button\">\n                  Search\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import \"./ImageCard.css\";\nimport React from \"react\";\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { spans: 0, isSelected: false };\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n    const spans = Math.ceil(height / 10);\n\n    this.setState({ spans });\n  };\n\n  selectImage = () => {\n    this.setState({ isSelected: !this.state.isSelected });\n  };\n\n  render() {\n    const { alt_description, urls } = this.props.image;\n    return (\n      <div\n        onClick={this.selectImage}\n        style={{ gridRowEnd: `span ${this.state.spans}`, cursor: \"pointer\" }}\n      >\n        {this.state.isSelected && (\n          <>\n            <div className=\"wrapper\">\n              <i className=\"paperclip icon\"></i>\n            </div>\n          </>\n        )}\n        <img ref={this.imageRef} alt={alt_description} src={urls.regular} />\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n","import \"./ImageList.css\";\nimport React from \"react\";\nimport ImageCard from \"./ImageCard\";\n\nconst ImageList = (props) => {\n  const setImage = (image) => {\n    if (props.parentState === undefined || props.parentState === null) return;\n    let imgData = props.parentState.state.printImages;\n    const dataObj = props.parentState.state.printImages;\n\n    if (props.parentState.state.printImages.length === 0) {\n      props.parentState.setState({\n        printImages: [image],\n      });\n      return;\n    }\n    const found = dataObj.filter((ele) => ele.id === image.id).length === 1;\n    if (found) {\n      imgData = dataObj.filter((ele) => ele.id !== image.id);\n    } else {\n      imgData.push(image);\n    }\n    props.parentState.setState({\n      printImages: imgData,\n    });\n  };\n\n  return (\n    <div className=\"image-list\">\n      {props.image.length > 0 ? (\n        props.image.map((image) => {\n          return (\n            <div\n              key={`${image.id}-wrapper`}\n              className=\"wrapper-imagecard\"\n              onClick={() => setImage(image)}\n            >\n              <ImageCard key={image.id} image={image} />\n            </div>\n          );\n        })\n      ) : (\n        <div>No image found</div>\n      )}\n    </div>\n  );\n};\n\nexport default ImageList;\n","import React from \"react\";\nimport ImageList from \"./ImageList\";\n\nclass ComponentToPrint extends React.Component {\n  render() {\n    return <ImageList image={this.props.printImages} />;\n  }\n}\n\nexport default ComponentToPrint;\n","import \"./ImageList.css\";\nimport React from \"react\";\nimport unsplash from \"../api/unsplash\";\nimport SearchBar from \"./SearchBar\";\nimport ImageList from \"./ImageList\";\nimport ReactToPrint from \"react-to-print\";\nimport ComponentToPrint from \"./ComponentToPrint\";\n\nclass App extends React.Component {\n  state = { images: [], printImages: [] };\n  componentRef;\n  onSearchSubmit = async (_state) => {\n    _state.setState({ loading: true });\n    const responce = await unsplash.get(\"/search/photos\", {\n      params: { query: _state.state.term },\n    });\n    if (responce) {\n      _state.setState({ loading: false });\n      this.setState({ images: responce.data.results });\n    } else {\n      this.setState({ image: [] });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\" style={{ marginTop: \"10px\" }}>\n        <ReactToPrint\n          trigger={() => <button>Print this out!</button>}\n          content={() => this.componentRef}\n        />\n        <SearchBar onSubmit={this.onSearchSubmit} />\n        <ImageList image={this.state.images} parentState={this} />\n        <div style={{ display: \"none\" }}>\n          <ComponentToPrint\n            bodyClass=\"wrapper-imagecard\"\n            ref={(el) => (this.componentRef = el)}\n            printImages={this.state.printImages}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App/>, document.querySelector(\"#root\"));"],"sourceRoot":""}